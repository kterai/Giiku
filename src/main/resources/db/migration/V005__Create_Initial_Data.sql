-- V004: Initial Data Population
-- Populates the database with complete 54 lectures across 3 months
-- Includes course structure, sample questions, and initial configuration

-- Insert Grade Settings (default configuration)
INSERT INTO grade_settings (setting_name, exercise_weight, quiz_weight, mock_test_weight, passing_threshold, is_active, created_by) 
VALUES ('Default Grade Settings', 0.40, 0.30, 0.30, 60.00, true, 1);

-- Insert 3 Months
INSERT INTO months (id, month_number, title, description, created_by) VALUES
(1, 1, '第1月', 'Web開発基礎とJavaScript入門', 1),
(2, 2, '第2月', 'フレームワーク開発とデータベース設計', 1),
(3, 3, '第3月', '実践開発とプロジェクト統合', 1);

-- Insert Weeks (18 weeks total, 6 weeks per month)
INSERT INTO weeks (month_id, week_number, week_name, description, created_by) VALUES 
-- Month 1 weeks
(1, 1, '第1週', 'HTML/CSS基礎', 1),
(1, 2, '第2週', 'JavaScript基礎', 1),
(1, 3, '第3週', 'DOM操作とイベント', 1),
(1, 4, '第4週', 'Ajax通信とAPI', 1),
(1, 5, '第5週', 'ES6+とモジュール', 1),
(1, 6, '第6週', 'フロントエンド総合', 1),
-- Month 2 weeks  
(2, 7, '第7週', 'Node.js基礎', 1),
(2, 8, '第8週', 'Express.js開発', 1),
(2, 9, '第9週', 'データベース設計', 1),
(2, 10, '第10週', 'ORM とデータ操作', 1),
(2, 11, '第11週', '認証とセキュリティ', 1),
(2, 12, '第12週', 'テストとデバッグ', 1),
-- Month 3 weeks
(3, 13, '第13週', 'React基礎', 1),
(3, 14, '第14週', 'State管理とRedux', 1),
(3, 15, '第15週', 'プロジェクト設計', 1),
(3, 16, '第16週', '実装とコードレビュー', 1),
(3, 17, '第17週', 'デプロイと運用', 1),
(3, 18, '第18週', '総合テストと振り返り', 1);

-- Insert Days (18 weeks × 3 days = 54 days)
INSERT INTO days (week_id, day_number, day_name, description, created_by) VALUES 
-- Week 1-6 (Days 1-18)
(1, 1, 'Day 1', 'HTML基礎構造', 1), (1, 2, 'Day 2', 'CSS基礎スタイリング', 1), (1, 3, 'Day 3', 'レスポンシブデザイン', 1),
(2, 4, 'Day 4', 'JavaScript文法基礎', 1), (2, 5, 'Day 5', '関数とスコープ', 1), (2, 6, 'Day 6', '配列とオブジェクト', 1),
(3, 7, 'Day 7', 'DOM要素の操作', 1), (3, 8, 'Day 8', 'イベントハンドリング', 1), (3, 9, 'Day 9', 'フォーム処理', 1),
(4, 10, 'Day 10', 'XMLHttpRequest', 1), (4, 11, 'Day 11', 'Fetch API', 1), (4, 12, 'Day 12', 'REST API設計', 1),
(5, 13, 'Day 13', 'ES6新機能', 1), (5, 14, 'Day 14', 'モジュールシステム', 1), (5, 15, 'Day 15', '非同期処理', 1),
(6, 16, 'Day 16', 'Webpack基礎', 1), (6, 17, 'Day 17', 'SPA開発', 1), (6, 18, 'Day 18', 'フロントエンド総合演習', 1),
-- Week 7-12 (Days 19-36)
(7, 19, 'Day 19', 'Node.js環境構築', 1), (7, 20, 'Day 20', 'NPMとパッケージ管理', 1), (7, 21, 'Day 21', 'サーバーサイド基礎', 1),
(8, 22, 'Day 22', 'Express.js基礎', 1), (8, 23, 'Day 23', 'ルーティングとミドルウェア', 1), (8, 24, 'Day 24', 'テンプレートエンジン', 1),
(9, 25, 'Day 25', 'SQL基礎', 1), (9, 26, 'Day 26', 'データベース設計', 1), (9, 27, 'Day 27', 'PostgreSQL実践', 1),
(10, 28, 'Day 28', 'Sequelize基礎', 1), (10, 29, 'Day 29', 'モデル定義とマイグレーション', 1), (10, 30, 'Day 30', 'クエリとリレーション', 1),
(11, 31, 'Day 31', 'セッション管理', 1), (11, 32, 'Day 32', 'JWT認証', 1), (11, 33, 'Day 33', 'セキュリティ対策', 1),
(12, 34, 'Day 34', 'ユニットテスト', 1), (12, 35, 'Day 35', '統合テスト', 1), (12, 36, 'Day 36', 'デバッグ技法', 1),
-- Week 13-18 (Days 37-54)
(13, 37, 'Day 37', 'React環境セットアップ', 1), (13, 38, 'Day 38', 'コンポーネント基礎', 1), (13, 39, 'Day 39', 'Props とState', 1),
(14, 40, 'Day 40', 'useState とuseEffect', 1), (14, 41, 'Day 41', 'Redux基礎', 1), (14, 42, 'Day 42', 'Redux Toolkit', 1),
(15, 43, 'Day 43', 'アプリケーション設計', 1), (15, 44, 'Day 44', 'コンポーネント設計', 1), (15, 45, 'Day 45', 'データフロー設計', 1),
(16, 46, 'Day 46', 'プロジェクト実装1', 1), (16, 47, 'Day 47', 'プロジェクト実装2', 1), (16, 48, 'Day 48', 'コードレビューと改善', 1),
(17, 49, 'Day 49', 'デプロイメント準備', 1), (17, 50, 'Day 50', 'Herokuデプロイ', 1), (17, 51, 'Day 51', '運用とモニタリング', 1),
(18, 52, 'Day 52', '最終プロジェクト発表', 1), (18, 53, 'Day 53', '総合復習', 1), (18, 54, 'Day 54', '修了テストと振り返り', 1);

-- Insert all 54 Lectures with detailed content
INSERT INTO lectures (day_id, lecture_number, title, description, goals, content_chapters, content_blocks, duration_minutes, created_by) VALUES 
-- Month 1: Web基礎 (Lectures 1-18)
-- (1, 1, 'HTML基礎構造の理解', 'HTMLの基本的な構造とタグについて学習', '["HTML基本構造理解","主要タグ習得","セマンティックHTML"]', '["HTML概要","基本構造","主要タグ","セマンティック","演習"]', '["HTML概要","DOCTYPE宣言","head/body要素","テキスト要素","リスト要素","リンク・画像","セマンティック要素","フォーム基礎","実践演習","まとめ"]', 180, 1),
-- (2, 2, 'CSS基礎スタイリング', 'CSSの基本的な記法とスタイリング技法を学習', '["CSS基本記法","セレクタ・プロパティ","Boxモデル理解"]', '["CSS概要","基本記法","セレクタ","プロパティ","Boxモデル"]', '["CSS概要","セレクタ種類","テキストスタイル","色・背景","Boxモデル","幅・高さ","表示プロパティ","ポジション","実践演習","デバッグツール"]', 180, 1),
-- (3, 3, 'レスポンシブデザイン', 'レスポンシブWebデザインの原理と実装', '["レスポンシブ概念","メディアクエリ","フレックスボックス"]', '["レスポンシブ概要","メディアクエリ","フレックス","グリッド","演習"]', '["レスポンシブ基本","ビューポート","メディアクエリ","ブレークポイント","フレックス基礎","justify/align","flex-wrap","グリッド基礎","実践演習","モバイルファースト"]', 180, 1),
(4, 4, 'JavaScript文法基礎', 'JavaScriptの基本文法と変数', '["JS基本文法","変数宣言・型","演算子・制御構文"]', '["JS概要","変数・型","演算子","制御構文","演習"]', '["JS概要","変数宣言","データ型","演算子","条件分岐","三項演算子","switch文","繰り返し","break/continue","実践演習"]', 180, 1),
(5, 5, '関数とスコープ', 'JavaScript関数定義とスコープ概念', '["関数定義・呼出","引数・戻り値","スコープ概念"]', '["関数基礎","引数・戻り値","スコープ","クロージャ","演習"]', '["関数定義方法","引数渡し","デフォルト引数","戻り値","グローバル/ローカル","ブロックスコープ","hoisting","クロージャ","IIFE","実践演習"]', 180, 1),
(6, 6, '配列とオブジェクト', 'JavaScript配列とオブジェクト操作', '["配列操作","オブジェクト作成・操作","配列メソッド活用"]', '["配列基礎","配列メソッド","オブジェクト基礎","オブジェクト操作","演習"]', '["配列作成","インデックス","長さ・ループ","push/pop/shift/unshift","splice/slice","検索メソッド","オブジェクトリテラル","プロパティアクセス","メソッド","実践演習"]', 180, 1),
(7, 7, 'DOM要素の操作', 'DOM概念と要素取得・操作方法', '["DOM概念理解","要素取得方法","要素内容・属性操作"]', '["DOM概要","要素取得","要素操作","スタイル操作","演習"]', '["DOM概念","document","getElementById/querySelector","getElements/querySelectorAll","textContent/innerHTML","getAttribute/setAttribute","classList","styleプロパティ","createElement/appendChild","実践演習"]', 180, 1),
(8, 8, 'イベントハンドリング', 'イベント概念とハンドラー設定', '["イベント概念","イベントリスナー","イベントオブジェクト"]', '["イベント概要","リスナー","オブジェクト","イベント種類","演習"]', '["イベント駆動","addEventListener","イベント種類","イベントオブジェクト","preventDefault","stopPropagation","removeEventListener","キーボード","マウス","実践演習"]', 180, 1),
(9, 9, 'フォーム処理', 'HTMLフォームとJavaScript連携', '["フォーム要素操作","値取得・設定","フォームバリデーション"]', '["フォーム基礎","値操作","バリデーション","送信処理","演習"]', '["フォーム要素種類","input操作","select操作","textarea","FormData","値検証","カスタムバリデーション","エラー表示","送信制御","実践演習"]', 180, 1),
(10, 10, 'XMLHttpRequest', 'XMLHttpRequestによる非同期通信', '["XMLHttpRequest使用","非同期通信概念","レスポンス処理"]', '["非同期概要","XMLHttpRequest","レスポンス","エラー処理","演習"]', '["同期・非同期","XMLHttpRequestオブジェクト","open/send","レスポンス受信","readyState/status","JSONデータ","エラーハンドリング","タイムアウト","プログレス","実践演習"]', 180, 1),
(11, 11, 'Fetch API', 'Fetch APIによるモダン非同期通信', '["Fetch API使用","Promise基本","async/await活用"]', '["Fetch API","Promise","async/await","エラー処理","演習"]', '["Fetch概要","fetch関数","Responseオブジェクト","Promise基本","then/catch","async/await","JSONデータ","リクエストオプション","エラーハンドリング","実践演習"]', 180, 1),
(12, 12, 'REST API設計', 'RESTful API設計原則と実装', '["REST設計原則","HTTPメソッド","APIエンドポイント設計"]', '["REST概要","HTTPメソッド","エンドポイント","ステータスコード","演習"]', '["REST概念","RESTful原則","HTTPメソッド(GET/POST/PUT/DELETE)","URL設計","ステータスコード","ヘッダー","JSON形式","APIドキュメント","Postmanテスト","実践演習"]', 180, 1),
(13, 13, 'ES6新機能', 'ES6追加新機能の学習', '["ES6新機能理解","アロー関数","分割代入活用"]', '["ES6概要","アロー関数","分割代入","テンプレートリテラル","演習"]', '["ES6概要","アロー関数記法","this動作","分割代入","テンプレートリテラル","デフォルトパラメータ","レストパラメータ","スプレッド演算子","for...of","実践演習"]', 180, 1),
(14, 14, 'モジュールシステム', 'ES6モジュールシステム開発', '["モジュール概念","import/export","モジュール化利点"]', '["モジュール概要","export/import","モジュール化","名前空間","演習"]', '["モジュール必要性","exportタイプ","import記法","再エクスポート","動的インポート","循環依存回避","CommonJS/ES Modules","バンドラー","実践演習","プロジェクト構成"]', 180, 1),
(15, 15, '非同期処理', 'Promise・async/awaitによる非同期処理', '["Promise詳細理解","async/await活用","非同期処理制御"]', '["Promise詳説","async/await","並行処理","エラー処理","演習"]', '["非同期復習","Promise詳細","Promise.all/race","async/await詳細","try/catch","並行・逐次","タイムアウト","デバッグ","複数API連携","パフォーマンス"]', 180, 1),
(16, 16, 'Webpack基礎', 'Webpackによるモダン開発環境構築', '["Webpack概念","基本設定","開発環境構築"]', '["Webpack概要","設定ファイル","ローダー","プラグイン","演習"]', '["バンドラー概念","Webpack基本","config設定","entry/output","ローダー使用","プラグイン","開発サーバー","ホットリロード","ソースマップ","実践演習"]', 180, 1),
(17, 17, 'SPA開発', 'Single Page Application概念と実装', '["SPA概念理解","ルーティング実装","状態管理理解"]', '["SPA概要","ルーティング","状態管理","パフォーマンス","演習"]', '["SPA/MPA違い","メリット・デメリット","クライアントルーティング","History API","状態管理","コンポーネント通信","SEO対策","パフォーマンス最適化","実践演習","履歴管理"]', 180, 1),
(18, 18, 'フロントエンド総合演習', '学習内容統合総合演習', '["学習内容統合","実践アプリ作成","コード品質意識"]', '["要件分析","設計","実装","テスト","レビュー"]', '["要件確認","アプリ設計","HTMLマークアップ","CSSスタイリング","JS実装","API連携","エラーハンドリング","ユーザビリティテスト","コードレビュー","プレゼンテーション"]', 180, 1),

-- Month 2: Backend & Database (Lectures 19-36)
(19, 19, 'Node.js環境構築', 'Node.js環境構築とプロジェクト初期化', '["Node.js環境構築","NPM基本理解","プロジェクト初期化"]', '["Node.js概要","インストール","NPM基礎","初期化","演習"]', '["Node.js概要","インストール","nvm","NPM基本","package.json","依存関係","スクリプト","グローバル/ローカル","package-lock","実践演習"]', 180, 1),
(20, 20, 'NPMとパッケージ管理', 'NPMによるパッケージ・プロジェクト管理', '["NPMコマンド習得","パッケージ管理","package.json理解"]', '["NPM詳説","パッケージ管理","バージョン管理","スクリプト","演習"]', '["NPMコマンド","install/save/save-dev","更新・削除","バージョニング","詳細設定","スクリプト活用","環境変数","npmrc","セキュリティ監査","実践演習"]', 180, 1),
(21, 21, 'サーバーサイド基礎', 'Node.jsサーバーサイド開発基礎', '["HTTPサーバー作成","リクエスト・レスポンス","ファイルシステム操作"]', '["HTTP基礎","サーバー作成","ファイルシステム","モジュール","演習"]', '["HTTPプロトコル","httpモジュール","サーバー作成・起動","リクエスト/レスポンス","ルーティング基礎","fsモジュール","pathモジュール","osモジュール","実践演習","静的ファイルサーバー"]', 180, 1),
(22, 22, 'Express.js基礎', 'Express.jsフレームワーク基礎', '["Express基本概念","アプリケーション作成","基本的なルーティング"]', '["Express概要","アプリ作成","ルーティング","ミドルウェア","演習"]', '["Express概要","インストール・セットアップ","アプリケーション","基本ルーティング","リクエスト処理","レスポンス送信","静的ファイル","ミドルウェア基礎","エラーハンドリング","実践演習"]', 180, 1),
(23, 23, 'ルーティングとミドルウェア', 'Express.jsルーティングとミドルウェア', '["ルーティング詳細","ミドルウェア理解","カスタムミドルウェア作成"]', '["ルーティング詳細","ミドルウェア","カスタム","パラメータ","演習"]', '["ルーティング詳細","パラメータ取得","クエリパラメータ","ミドルウェア概念","内蔵ミドルウェア","サードパーティ","カスタムミドルウェア","エラーミドルウェア","ルーターモジュール","実践演習"]', 180, 1),
(24, 24, 'テンプレートエンジン', 'Express.jsテンプレートエンジン活用', '["テンプレートエンジン理解","EJS/Handlebars使用","動的コンテンツ生成"]', '["テンプレート概要","EJS","Handlebars","動的生成","演習"]', '["テンプレートエンジン必要性","EJS基礎","Handlebars基礎","データ渡し","条件分岐・繰り返し","パーシャル","レイアウト","ヘルパー","実践演習","パフォーマンス考慮"]', 180, 1),
(25, 25, 'SQL基礎', 'SQL基本文法とデータベース操作', '["SQL基本文法","CRUD操作","結合とサブクエリ"]', '["SQL概要","基本構文","CRUD","結合","演習"]', '["SQL概要","データベース基本","SELECT文","WHERE条件","ORDER BY","INSERT文","UPDATE文","DELETE文","JOIN","サブクエリ"]', 180, 1),
(26, 26, 'データベース設計', 'リレーショナルデータベース設計', '["正規化理解","テーブル設計","リレーション設計"]', '["DB設計概要","正規化","テーブル設計","リレーション","演習"]', '["DB設計基本","正規化(1NF-3NF)","主キー・外部キー","テーブル設計","リレーション設計","インデックス","制約","パフォーマンス","実践演習","設計書作成"]', 180, 1),
(27, 27, 'PostgreSQL実践', 'PostgreSQL実践的な使用法', '["PostgreSQL操作","高度なクエリ","パフォーマンス最適化"]', '["PostgreSQL概要","高度クエリ","最適化","管理","演習"]', '["PostgreSQL特徴","インストール・設定","psqlコマンド","高度なクエリ","ウィンドウ関数","CTE","インデックス最適化","EXPLAIN","バックアップ・復元","実践演習"]', 180, 1),
(28, 28, 'Sequelize基礎', 'SequelizeORM基礎', '["ORM概念理解","Sequelize基本","モデル定義"]', '["ORM概要","Sequelize基礎","モデル","接続","演習"]', '["ORM概念","Sequelize概要","インストール・設定","データベース接続","モデル定義","データ型","バリデーション","フック","実践演習","設定管理"]', 180, 1),
(29, 29, 'モデル定義とマイグレーション', 'Sequelizeモデル・マイグレーション', '["モデル詳細定義","マイグレーション","シーダー"]', '["モデル詳細","マイグレーション","シーダー","バージョン管理","演習"]', '["モデル詳細定義","アソシエーション","マイグレーション作成","実行・ロールバック","シーダー","データベースバージョン管理","環境別設定","実践演習","ベストプラクティス","チーム開発"]', 180, 1),
(30, 30, 'クエリとリレーション', 'Sequelizeクエリとリレーション操作', '["複雑クエリ","リレーション操作","パフォーマンス最適化"]', '["クエリ詳細","リレーション","最適化","トランザクション","演習"]', '["基本クエリ","条件指定","並び替え","ページネーション","リレーション取得","Eager/Lazyローディング","N+1問題","トランザクション","バルク操作","実践演習"]', 180, 1),
(31, 31, 'セッション管理', 'Webアプリケーションセッション管理', '["セッション概念","実装方法","セキュリティ考慮"]', '["セッション概要","実装","セキュリティ","ストレージ","演習"]', '["セッション概念","Cookieとの違い","express-session","セッションストア","Redis活用","セキュリティ設定","CSRF対策","セッション管理","実践演習","ベストプラクティス"]', 180, 1),
(32, 32, 'JWT認証', 'JSON Web Token認証システム', '["JWT概念理解","実装方法","セキュリティ対策"]', '["JWT概要","実装","セキュリティ","リフレッシュトークン","演習"]', '["JWT構造","署名・検証","実装","ミドルウェア","リフレッシュトークン","セキュリティ考慮","有効期限","ブラックリスト","実践演習","セッションとの比較"]', 180, 1),
(33, 33, 'セキュリティ対策', 'Webアプリケーションセキュリティ', '["セキュリティ脆弱性理解","対策実装","セキュリティヘッダー"]', '["脆弱性","対策","ヘッダー","暗号化","演習"]', '["一般的脆弱性","XSS対策","SQLインジェクション","CSRF","セキュリティヘッダー","HTTPS","パスワードハッシュ化","入力検証","実践演習","セキュリティテスト"]', 180, 1),
(34, 34, 'ユニットテスト', 'Node.jsアプリケーションテスト', '["テスト基本概念","ユニットテスト","テストフレームワーク"]', '["テスト概要","ユニットテスト","フレームワーク","モック","演習"]', '["テスト重要性","テスト種類","Jest基礎","テストケース作成","アサーション","モック・スタブ","カバレッジ","CI/CD連携","実践演習","TDD基礎"]', 180, 1),
(35, 35, '統合テスト', 'アプリケーション統合テスト', '["統合テスト概念","API テスト","E2Eテスト"]', '["統合テスト","APIテスト","E2E","自動化","演習"]', '["統合テスト概念","Supertest","APIテスト","データベーステスト","E2Eテスト基礎","Selenium/Puppeteer","テスト自動化","CI/CD","実践演習","テスト戦略"]', 180, 1),
(36, 36, 'デバッグ技法', '効果的なデバッグ手法', '["デバッグ基本","ツール活用","パフォーマンス分析"]', '["デバッグ基本","ツール","ログ","パフォーマンス","演習"]', '["デバッグ基本概念","console活用","Node.jsデバッガー","VSCodeデバッグ","ログ設計","エラー監視","パフォーマンス分析","メモリリーク","実践演習","本番デバッグ"]', 180, 1),

-- Month 3: React & Project (Lectures 37-54)
(37, 37, 'React環境セットアップ', 'React開発環境構築', '["React環境構築","Create React App","開発ツール"]', '["React概要","環境構築","CRA","開発ツール","演習"]', '["React概要","Create React App","プロジェクト構造","開発サーバー","ビルド","React DevTools","ESLint/Prettier","実践演習","設定カスタマイズ","トラブルシューティング"]', 180, 1),
(38, 38, 'コンポーネント基礎', 'Reactコンポーネント基本概念', '["コンポーネント概念","JSX理解","コンポーネント作成"]', '["コンポーネント概要","JSX","作成方法","構造","演習"]', '["コンポーネント概念","JSX記法","関数コンポーネント","クラスコンポーネント","コンポーネント構成","イベントハンドリング","条件レンダリング","リスト表示","実践演習","ベストプラクティス"]', 180, 1),
(39, 39, 'Props とState', 'Reactデータ管理基礎', '["Props理解","State管理","データフロー"]', '["Props","State","データフロー","更新","演習"]', '["Props基本","Props渡し","PropTypes","State基本","setState","状態更新","データフロー","親子通信","実践演習","パフォーマンス考慮"]', 180, 1),
(40, 40, 'useState とuseEffect', 'Reactフック基本活用', '["useState活用","useEffect理解","副作用処理"]', '["useState","useEffect","副作用","ライフサイクル","演習"]', '["Hooks概要","useState基本","状態更新","useEffect基本","副作用処理","クリーンアップ","依存配列","カスタムフック","実践演習","パフォーマンス最適化"]', 180, 1),
(41, 41, 'Redux基礎', 'Redux状態管理基礎', '["Redux概念理解","Store設計","Action・Reducer"]', '["Redux概要","Store","Action","Reducer","演習"]', '["Redux概念","単一方向データフロー","Store作成","Action定義","Reducer作成","connect","Provider","mapStateToProps","mapDispatchToProps","実践演習"]', 180, 1),
(42, 42, 'Redux Toolkit', 'Redux Toolkit活用', '["Redux Toolkit","createSlice","非同期処理"]', '["RTK概要","createSlice","Thunk","Query","演習"]', '["Redux Toolkit概要","createSlice","createAsyncThunk","configureStore","RTK Query基礎","キャッシュ","エラーハンドリング","デバッグ","実践演習","移行方法"]', 180, 1),
(43, 43, 'アプリケーション設計', '実践アプリケーション設計', '["要件分析","アーキテクチャ設計","技術選択"]', '["要件分析","設計","アーキテクチャ","技術選択","演習"]', '["要件分析手法","機能要件・非機能要件","アーキテクチャパターン","技術スタック選択","API設計","データベース設計","UI/UX設計","実践演習","設計書作成","レビュープロセス"]', 180, 1),
(44, 44, 'コンポーネント設計', 'Reactコンポーネント設計', '["コンポーネント設計原則","再利用性","保守性"]', '["設計原則","再利用性","構成","パターン","演習"]', '["設計原則","単一責任","コンポーネント分割","Props設計","状態管理設計","HOC","Render Props","Compound Component","実践演習","デザインシステム"]', 180, 1),
(45, 45, 'データフロー設計', 'アプリケーションデータフロー設計', '["データフロー設計","状態管理戦略","API統合"]', '["データフロー","状態管理","API統合","最適化","演習"]', '["データフロー設計","グローバル・ローカル状態","Context API","状態正規化","API統合パターン","キャッシュ戦略","エラーハンドリング","ローディング状態","実践演習","パフォーマンス"]', 180, 1),
(46, 46, 'プロジェクト実装1', '実践プロジェクト開発開始', '["プロジェクト実装","チーム開発","バージョン管理"]', '["実装開始","チーム開発","Git","タスク管理","演習"]', '["開発環境統合","Git workflow","ブランチ戦略","コードレビュー","タスク管理","進捗管理","コーディング規約","実装開始","中間レビュー","問題解決"]', 180, 1),
(47, 47, 'プロジェクト実装2', '実践プロジェクト開発継続', '["機能実装完了","テスト実装","バグ修正"]', '["機能完成","テスト","バグ修正","最適化","演習"]', '["機能実装完了","ユニット・統合テスト","E2Eテスト","バグ修正","リファクタリング","パフォーマンス最適化","アクセシビリティ","実践演習","品質保証","ドキュメント"]', 180, 1),
(48, 48, 'コードレビューと改善', 'コード品質向上とレビュー', '["コードレビュー","品質改善","リファクタリング"]', '["コードレビュー","品質改善","リファクタリング","最適化","演習"]', '["コードレビュー手法","静的解析","品質メトリクス","リファクタリング","技術的負債","セキュリティチェック","パフォーマンス改善","実践演習","ベストプラクティス","改善計画"]', 180, 1),
(49, 49, 'デプロイメント準備', '本番環境デプロイ準備', '["デプロイ準備","環境設定","CI/CD"]', '["デプロイ準備","環境設定","CI/CD","自動化","演習"]', '["デプロイ戦略","環境別設定","ビルド最適化","CI/CD パイプライン","GitHub Actions","自動テスト","環境変数管理","セキュリティ設定","実践演習","監視準備"]', 180, 1),
(50, 50, 'Herokuデプロイ', 'Herokuによる本番デプロイ', '["Heroku理解","デプロイ実行","設定管理"]', '["Heroku概要","デプロイ","設定","管理","演習"]', '["Heroku概要","アプリケーション作成","デプロイ設定","環境変数","データベース設定","ログ管理","スケーリング","カスタムドメイン","実践演習","トラブルシューティング"]', 180, 1),
(51, 51, '運用とモニタリング', 'アプリケーション運用・監視', '["運用管理","監視設定","パフォーマンス分析"]', '["運用管理","監視","ログ","パフォーマンス","演習"]', '["運用の重要性","ログ管理","エラー監視","パフォーマンス監視","アラート設定","バックアップ","セキュリティ監視","実践演習","運用自動化","インシデント対応"]', 180, 1),
(52, 52, '最終プロジェクト発表', '成果発表とプレゼンテーション', '["プレゼンテーション","成果発表","振り返り"]', '["発表準備","プレゼン","デモ","質疑応答","振り返り"]', '["発表資料作成","プレゼンテーション技法","デモ準備","質疑応答準備","成果発表","ピアレビュー","フィードバック","振り返り","実践演習","今後の学習計画"]', 180, 1),
(53, 53, '総合復習', '全体学習内容の復習', '["総合復習","知識整理","実践問題"]', '["復習","知識整理","問題演習","弱点克服","演習"]', '["学習内容総復習","重要概念整理","実践問題演習","弱点分析・克服","総合演習","模擬試験","解説・解答","実践演習","知識定着確認","補強学習"]', 180, 1),
(54, 54, '修了テストと振り返り', '最終評価と学習振り返り', '["修了テスト","学習振り返り","今後の計画"]', '["修了テスト","振り返り","評価","今後計画","修了式"]', '["修了テスト実施","結果分析","学習成果振り返り","スキル評価","今後の学習計画","キャリア相談","修了証授与","実践演習","ネットワーキング","継続学習リソース"]', 180, 1);

-- Sample Questions for first few lectures
INSERT INTO exercise_question_bank (lecture_id, question_type, question_text, question_options, correct_answer, answer_explanation, difficulty_level, points, created_by) VALUES 
(1, 'multiple_choice', 'HTMLの基本構造で、文書型宣言に使用するタグはどれですか？', '{"options": ["<html>", "<!DOCTYPE html>", "<head>", "<body>"]}', '<!DOCTYPE html>', 'DOCTYPE宣言は文書がHTML5であることをブラウザに伝える重要な宣言です。', 2, 5, 1),
(1, 'multiple_choice', 'HTMLでページのタイトルを設定するタグはどれですか？', '{"options": ["<title>", "<h1>", "<header>", "<meta>"]}', '<title>', '<title>タグはhead要素内に記述し、ブラウザのタブに表示されるタイトルを設定します。', 1, 5, 1),
(2, 'multiple_choice', 'CSSでクラスセレクタを指定する際に使用する記号はどれですか？', '{"options": ["#", ".", "@", "&"]}', '.', 'クラスセレクタは「.」（ピリオド）を使用してクラス名を指定します。', 1, 5, 1);

-- Sample Quiz Questions
INSERT INTO quiz_question_bank (lecture_id, question_type, question_text, question_options, correct_answer, answer_explanation, points, created_by) VALUES 
(1, 'multiple_choice', 'HTML5のセマンティック要素として正しいものはどれですか？', '{"options": ["<div>", "<span>", "<section>", "<b>"]}', '<section>', '<section>は内容のまとまりを表すセマンティック要素です。', 10, 1),
(2, 'true_false', 'CSSのBoxモデルでは、marginは要素の内側の余白を指す。', '{"options": ["true", "false"]}', 'false', 'marginは要素の外側の余白です。内側の余白はpaddingです。', 10, 1);

-- Mock Tests
INSERT INTO mock_test_bank (test_name, description, duration_minutes, total_points, passing_score, created_by) VALUES 
('第1月総合テスト', 'Web基礎技術（HTML/CSS/JavaScript）の理解度を測るテスト', 90, 100, 70, 1),
('第2月総合テスト', 'Backend開発（Node.js/Express/Database）の理解度を測るテスト', 90, 100, 70, 1),  
('第3月総合テスト', 'React開発とプロジェクト実装の理解度を測るテスト', 90, 100, 70, 1),
('最終総合テスト', '全カリキュラムの総合的な理解度を測る最終テスト', 120, 100, 70, 1);

-- Mock Test Questions
INSERT INTO mock_test_questions (mock_test_id, question_type, question_text, question_options, correct_answer, answer_explanation, points, question_order, created_by) VALUES 
(1, 'multiple_choice', 'HTMLでリストを作成する際、順序のないリストに使用するタグはどれですか？', '{"options": ["<ol>", "<ul>", "<li>", "<dl>"]}', '<ul>', '<ul>（unordered list）は順序のないリストを作成するタグです。', 5, 1, 1),
(1, 'multiple_choice', 'CSSのdisplayプロパティで、要素をブロックレベル要素として表示する値はどれですか？', '{"options": ["inline", "block", "none", "flex"]}', 'block', 'display: blockは要素をブロックレベル要素として表示します。', 5, 2, 1);

-- Update sequences to current max values
SELECT setval('months_id_seq', (SELECT MAX(id) FROM months));
SELECT setval('weeks_id_seq', (SELECT MAX(id) FROM weeks));  
SELECT setval('days_id_seq', (SELECT MAX(id) FROM days));
SELECT setval('lectures_id_seq', (SELECT MAX(id) FROM lectures));
SELECT setval('exercise_question_bank_id_seq', (SELECT MAX(id) FROM exercise_question_bank));
SELECT setval('quiz_question_bank_id_seq', (SELECT MAX(id) FROM quiz_question_bank));
SELECT setval('mock_test_bank_id_seq', (SELECT MAX(id) FROM mock_test_bank));
SELECT setval('mock_test_questions_id_seq', (SELECT MAX(id) FROM mock_test_questions));
SELECT setval('grade_settings_id_seq', (SELECT MAX(id) FROM grade_settings));
