/*
 * Copyright (c) 2024 APSA Co.,Ltd. All rights reserved.
 * 技育システム - Gradle Build Configuration
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.flywaydb.flyway' version '9.21.1'
    id 'jacoco'
    id 'eclipse'
    id 'idea'
    id 'com.github.node-gradle.node' version '7.0.1'
}

group = 'jp.co.apsa'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

node {
    download = true
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.1'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.retry:spring-retry'

    // Database
    runtimeOnly 'org.postgresql:postgresql:42.7.7'

    implementation 'org.flywaydb:flyway-core'

    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

    // Utilities
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'commons-io:commons-io:2.11.0'

    // WebJars
    implementation 'org.webjars.npm:bootstrap:5.3.3'
    implementation 'org.webjars.npm:bootstrap-icons:1.11.3'
    implementation 'org.webjars.npm:fortawesome__fontawesome-free:7.0.0'
    implementation 'org.webjars.npm:chart.js:4.4.0'
    implementation 'org.webjars.npm:react:18.2.0'
    implementation 'org.webjars.npm:react-dom:18.2.0'
    implementation 'org.webjars.npm:babel__standalone:7.21.2'
    implementation 'org.webjars.npm:js-tokens:4.0.0'
    implementation 'org.webjars:webjars-locator-core'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // Configuration Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'com.h2database:h2:2.2.224'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

flyway {
    driver = 'org.postgresql.Driver'
    url = System.getenv('DATABASE_URL') ?: project.findProperty('database.url')
    user = System.getenv('DATABASE_USERNAME') ?: project.findProperty('database.username')
    password = System.getenv('DATABASE_PASSWORD') ?: project.findProperty('database.password')
    schemas = ['public']
    locations = ['classpath:db/migration']
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:1.19.0"
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.80
            }
        }
    }
}

// Eclipse設定
eclipse {
    project {
        name = 'Giiku'
        comment = '技育システム - APSA Co.,Ltd.'
        buildCommand 'org.eclipse.jdt.core.javabuilder'
        natures 'org.eclipse.jdt.core.javanature'
    }

    classpath {
        downloadSources = true
        downloadJavadoc = true
        file {
            whenMerged { classpath ->
                classpath.entries.removeAll { entry -> 
                    entry.kind == 'src' && entry.path == 'src/main/resources'
                }
                classpath.entries.add(new org.gradle.plugins.ide.eclipse.model.SourceFolder('src/main/resources', null))
            }
        }
    }

    jdt {
        sourceCompatibility = 17
        targetCompatibility = 17
        javaRuntimeName = "JavaSE-17"
    }
}

// IDEA設定
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

// JAR設定
jar {
    enabled = false
}

bootJar {
    archiveFileName = 'giiku-system.jar'
    manifest {
        attributes(
            'Implementation-Title': 'Giiku System',
            'Implementation-Version': project.version,
            'Implementation-Vendor': 'APSA Co.,Ltd.',
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date().format('yyyy-MM-dd HH:mm:ss'),
            'Built-JDK': System.getProperty('java.version')
        )
    }
}

// 開発用タスク
task dev {
    group = 'application'
    description = 'Run the application in development mode'
    dependsOn 'bootRun'
}

bootRun {
    jvmArgs = ['-Dspring.profiles.active=dev']
}

// Tailwind CSS Build
tasks.register('buildTailwind', com.github.gradle.node.npm.task.NpmTask) {
    dependsOn npmInstall
    args = ['run', 'build:css']
}

processResources.dependsOn 'buildTailwind'
